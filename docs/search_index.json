[["index.html", "POP77001 Computer Programming for Social Scientists About This Module Instructors Module Meetings Prerequisites Hardware and Software Materials Assessment Assessment criteria Plagiarism", " POP77001 Computer Programming for Social Scientists Tom Paskhalis, Department of Political Science, Trinity College Dublin 2021 About This Module This module provides foundational knowledge of computer programming concepts and software engineering practices. It introduces students to major data science programming languages and workflows, with a focus on social science data and research questions. Students will be introduced to Python and R, two principal data science programming languages. This course covers basic and intermediate programming concepts, such as object types, functions, control flow, testing and debugging. Particular emphasis will be made on data handling and analytical tasks with a focus on problems in social sciences. Homeworks will include hands-on coding exercises. In addition, students will apply their programming knowledge on a research project at the end of the module. Instructors Tom Paskhalis, Office Hours: Thursday 11:00-13:00 online Martyn Egan Module Meetings 11 two-hour lectures Monday 11:00 in East End Development 4/5 LTEE2 11 one-hour tutorials Group 1: Wednesday 14:00 in 1 College Green 2.04 Group 2: Thursday 10:00 in East End Development 4/5 LTEE2 No lecture/tutorial in Week 7 Week Language Topic 1 - What is computation? 2 Python Python Basics 3 Python Control Flow in Python 4 Python Functions in Python 5 Python Debugging and Testing in Python 6 Python Data Wrangling in Python 7 - - 8 R Fundamentals of R Programming I 9 R Fundamentals of R Programming II 10 R Data Wrangling in R 11 R, Python Complexity and Performance 12 R, Python Web scraping Prerequisites This is an introductory class and no prior experience with programming is required. Hardware and Software Laptop with Windows/Mac/Linux OS (no Chrome books) Software: Python (version 3+) - versatile programming language R (version 4+) - statistical programming language Jupyter - web-based interactive computational environment RStudio - integrated development environment Git - version control system GitHub - git-based online platform for code hosting Materials The following texts provide a good introduction to Python and R programming with a focus on data analysis applications: Guttag, John. 2021 Introduction to Computation and Programming Using Python: With Application to Computational Modeling and Understanding Data. 3rd ed.¬†Cambridge, MA: The MIT Press Matloff, Norman. 2011. The Art of R Programming: A Tour of Statistical Software Design. San Francisco, CA: No Starch Press. McKinney, Wes. 2017. Python for Data Analysis: Data Wrangling with Pandas, NumPy, and IPython. 2nd ed.¬†Sebastopol, CA: O‚ÄôReilly Media Wickham, Hadley. 2019. Advanced R. 2nd ed.¬†Boca Raton, FL: Chapman and Hall/CRC. Wickham, Hadley, and Garrett Grolemund. 2017. R for Data Science: Import, Tidy, Transform, Visualize, and Model Data. Sebastopol, CA: O‚ÄôReilly Media. Additional online resources: Git Book Python For You and Me Python Wikibook Python 3 Documentation (intermediate and advanced) R Documentation R Inferno Assessment 5 problem sets (50%) Bi-weekly programming assigments Due at 11:00 on Monday of weeks 3,5,7,10 and 12 on Blackboard Research project (50%) Final Python/R project demonstrating familiarity with programming concepts and ability to communicate results Due at 11:00 on Monday, 20 December 2021 Assessment criteria ‚úîÔ∏è Code exists ‚åö Code runs and does what it has to do üìú Code is legible (meaningful naming, comments) ‚öôÔ∏è Code is modular (no redundacies, use of abstractions) üèéÔ∏è Code is optimized (no needless loops, runs fast) Plagiarism Plagiarising computer code is as serious as plagiarising text (see Google LLC v. Oracle America, Inc.) All submitted programming assignments and final project should be done individually You may discuss general approaches to solutions with your peers But do not share or view each others code You can use online resources but give credit in the comments Check the Trinity‚Äôs guide on the levels and consequences of plagiarism "],["what-is-computation.html", "1 What is Computation? Readings Lab", " 1 What is Computation? Lecture Slides (html) Lecture Slides (ipynb) Lab Exercise (ipynb) Lab Exercise (html) Recording In the first week we will cover the core software development concepts such as computers, programming languages and algorithms. Readings Guttag. Chapters 1-2.1 McKinney. Chapters 1-2 Wing, Jeannette M. 2006. ‚ÄúComputational Thinking.‚Äù Communications of the ACM, 49 (3): 33‚Äì35. doi: 10.1145/1118178.1118215 Lab Installation of Python and R Introduction to Jupyter Lab and alternative IDEs Work in command-line interfaces (CLIs) GitHub Workflow "],["python-basics.html", "2 Python Basics Readings Lab Assignment 1", " 2 Python Basics Lecture Slides (html) Lecture Slides (ipynb) Lab Exercise (ipynb) Lab Exercise (html) Recording Assignment In this week we will discuss the fundamental concepts of programming, such as variables, assignment and object types with application to Python. In addition, we will start using some in-built methods and functions. Readings Guttag. Chapters 2.2, 2.4, 4.5, 5.1, 5.3, 5.5-5.7 Lab Python object types and casting Application of methods and functions Assignment 1 Python built-in objects and methods Due at 11:00 on Monday, 27th September (submission on Blackboard) Rename the file from 01_assignment.ipynb to 01_assignment_studentnumber_firstname_lastname.ipynb before submission "],["control-flow-in-python.html", "3 Control Flow in Python Readings Lab", " 3 Control Flow in Python Lecture Slides (html) Lecture Slides (ipynb) Lab Exercise (ipynb) Lab Exercise (html) In this week we will focus on the key ways of controlling the flow of programs in Python. We will look at branching and loops, common for all programming languages and the details of their design in Python. Several Python-specific mechanisms of control flow, such as list and dictionary comprehensions will be discussed. Readings Guttag. Chapters 2.3, 2.5-2.6 Lab Conditional statements and iterations List and dictionary comprehensions "],["functions-in-python.html", "4 Functions in Python Readings Lab Assignment 2", " 4 Functions in Python Lecture Slides (html) Lecture Slides (ipynb) Lab Exercise (ipynb) Lab Exercise (html) Assignment This week we will discuss functions, one of main building blocks of a program implemented in any language. We will start by looking at unnamed (lambda) functions and proceed to defining functions in Python. Special attention will be given to argument specification and unpacking. Readings Guttag. Chapter 4 Lab Working with functions in Python Assignment 2 Control flow and functions in Python Due at 11:00 on Monday, 11th October (submission on Blackboard) Rename the file from 02_assignment.ipynb to 02_assignment_studentnumber_firstname_lastname.ipynb before submission "],["debugging-and-testing-in-python.html", "5 Debugging and Testing in Python Readings Lab", " 5 Debugging and Testing in Python Lecture Slides (html) Lecture Slides (ipynb) Lab Exercise (ipynb) Lab Exercise (html) In this week we will focus on how to debug and test a Python program. We will start with the usage of print() statement to analyse the state of function calls and loops. Afterwards, we will talk about more structured ways of error-catching and debugging using exceptions and built-in Python debugger. Readings Guttag. Chapters 8-9 Lab Ways of debugging a program Exceptions and assertions in Python "],["data-wrangling-in-python.html", "6 Data Wrangling in Python Readings Lab Assignment 3", " 6 Data Wrangling in Python Lecture Slides (html) Lecture Slides (ipynb) Lab Exercise (ipynb) Lab Exercise (html) Assignment This week we will turn from broader programming and software engineering concepts to practical approaches of working with data in Python. In particular, we will focus on pandas, a versatile library for data analysis, which often serves as the first building block in many data-science pipelines. Readings Guttag. Chapter 23 McKinney. Chapters 5-9 Lab Data input and output Working with pandas library Assignment 3 Testing and data wrangling in Python Due at 11:00 on Wednesday, 27th October (submission on Blackboard) Rename the file from 03_assignment.ipynb to 03_assignment_studentnumber_firstname_lastname.ipynb before submission "],["fundamentals-of-r-programming-i.html", "8 Fundamentals of R Programming I Readings Lab", " 8 Fundamentals of R Programming I Lecture Slides (html) Lecture Slides (ipynb) Lab Exercise (ipynb) Lab Exercise (html) Recording This week we start learning about R, another major language for data analysis. In the first lecture we will look at core R structures and data types, operators and subsetting. Some of R fundamentals will be compared and contrasted to their counterparts in Python. Readings Matloff. Chapters 2: Vectors, 3: Matrices &amp; Arrays, 4: Lists, 5: Data Frames, 6: Factors &amp; Tables; Wickham. Chapters 2: Data Structures, 3: Subsetting, 4: Vocabulary Lab R core data structures Subsetting and working with attributes "],["fundamentals-of-r-programming-ii.html", "9 Fundamentals of R Programming II Readings Lab Assignment 4", " 9 Fundamentals of R Programming II Lecture Slides (html) Lecture Slides (ipynb) Lab Exercise (ipynb) Lab Exercise (html) Recording Assignment In this week we focus on functional side of programming in R. We look at control flow mechanisms and functions. Readings Matloff. Chapter 7: R Programming Structures; Wickham. Chapters 6: Functions, 10: Functional Programming, 11: Functionals, 12: Function Operators Lab Conditional statements and iterations Working with functions in R Assignment 4 Fundamentals of R programming Due at 11:00 on Monday, 15th November (submission on Blackboard) Rename the file from 04_assignment.ipynb to 04_assignment_studentnumber_firstname_lastname.ipynb before submission "],["data-wrangling-in-r.html", "10 Data Wrangling in R Readings Lab", " 10 Data Wrangling in R Lecture Slides (html) Lecture Slides (ipynb) Lab Exercise (ipynb) Lab Exercise (html) Recording Working with data is at the centre of programming in R. In addition to core functionality of base R, many new packages, such as tidyverse collection provide advanced data manipulation facilities and enhanced experience of working with tabular data. In this week we will focus on data frame and its tidyverse cousin tibble. We will also discuss formats of data storage and functions for data I/O and descriptive analysis. Readings Wickham &amp; Grolemund. Chapters 7: Tibbles, 8: Data Import, 9: Tidy Data Lab Data input and output Working with data in base R and tidyverse "],["complexity-and-performance.html", "11 Complexity and Performance Readings Lab Assignment 5", " 11 Complexity and Performance Lecture Slides (html) Lecture Slides (ipynb) Lab Exercise (ipynb) Lab Exercise (html) Recording Assignment Getting the correct result and having well-structured and documented code are only two aspects of a good program. We also want our code to execute fast and, in some cases, for it to finish running in a moment, hour, day, year, lifetime‚Ä¶ This week we more formally discuss algorithmic complexity and performance. In addition to theoretical considerations we look into measuring execution time and benchmarking specific operations. Readings Guttag. Chapters 11, 12; Wickham. Chapters 16: Performance, 17: Optimising Code Lab Analysis of function complexity and performance Timing and benchmarking Assignment 5 Data wrangling and computational complexity Due at 11:00 on Monday, 29th November (submission on Blackboard) Rename the file from 05_assignment.ipynb to 05_assignment_studentnumber_firstname_lastname.ipynb before submission "],["web-scraping.html", "12 Web scraping Readings Lab Final project", " 12 Web scraping Lecture Slides (html) Lecture Slides (ipynb) Lab Exercise (ipynb) Lab Exercise (html) Final Project Web is the main source of data these days. While some data is available in an easy-to-download format such CSV, oftentimes we need to go over many webpages to gather data for our analysis. This week we discuss the fundamentals of web scraping, collecting data from online sources. Readings Munzert, Simon, Christian Rubba, Peter Meissner, and Dominic Nyhuis D. 2015. Automated Data Collection with R: A Practical Guide to Web Scraping and Text Mining. Chichester, UK: Wiley &amp; Sons. Chapters 2-4, 9; Nolan, Deborah, and Duncan Temple Lang. 2014. XML and Web Technologies for Data Sciences with R. Springer: New York. Chapters 1-4 Lab Handling basic XML/HTML Scraping web tables Final project K-means clustering Due at 23:59 on Monday, 20th December (submission on Blackboard) Rename the file from final_project.ipynb to final_project_firstname_lastname.ipynb before submission "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
